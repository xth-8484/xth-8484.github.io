<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Spring boot2笔记</title>
    <link href="/2023/12/22/Spring-boot2%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/12/22/Spring-boot2%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot集成Dubbo"><a href="#SpringBoot集成Dubbo" class="headerlink" title="SpringBoot集成Dubbo"></a>SpringBoot集成Dubbo</h1><h2 id="看-SpringBoot继承Dubbo的文档"><a href="#看-SpringBoot继承Dubbo的文档" class="headerlink" title="看 SpringBoot继承Dubbo的文档"></a>看 SpringBoot继承Dubbo的文档</h2><p> <a href="https://github.com/apache/dubbo-spring-boot-project/blob/master/README_CN.md">https://github.com/apache/dubbo-spring-boot-project/blob/master/README_CN.md</a></p><h2 id="7-2-公共项目"><a href="#7-2-公共项目" class="headerlink" title="7.2  公共项目"></a>7.2  公共项目</h2><p>独立的maven项目： 定义了接口和数据类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1901229007746699151L</span>;<br><br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Integer age;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">StudentService</span> &#123;<br><br>    Student <span class="hljs-title function_">queryStudent</span><span class="hljs-params">(Integer id)</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="7-3-提供者"><a href="#7-3-提供者" class="headerlink" title="7.3  提供者"></a>7.3  提供者</h2><p>创建SpringBoot项目</p><p>1） pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><br>   <span class="hljs-comment">&lt;!--加入公共项目的gav--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.bjpowernode<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>022-interface-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>   <span class="hljs-comment">&lt;!--dubbo依赖--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.dubbo<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br>   <span class="hljs-comment">&lt;!--zookeeper依赖--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.dubbo<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>dubbo-dependencies-zookeeper<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>         <span class="hljs-comment">&lt;!-- 排除log4j依赖 --&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-log4j12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2）实现接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 使用dubbo中的注解暴露服务</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Component</span> 可以不用加</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@DubboService(interfaceClass = StudentService.class,version = &quot;1.0&quot;,timeout = 5000)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">StudentService</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Student <span class="hljs-title function_">queryStudent</span><span class="hljs-params">(Integer id)</span> &#123;<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span>  <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>();<br>        <span class="hljs-keyword">if</span>( <span class="hljs-number">1001</span> == id)&#123;<br>            student.setId(<span class="hljs-number">1001</span>);<br>            student.setName(<span class="hljs-string">&quot;------1001-张三&quot;</span>);<br>            student.setAge(<span class="hljs-number">20</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-number">1002</span>  == id)&#123;<br>            student.setId(<span class="hljs-number">1002</span>);<br>            student.setName(<span class="hljs-string">&quot;#######1002-李四&quot;</span>);<br>            student.setAge(<span class="hljs-number">22</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> student;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3）application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#配置服务名称 dubbo:application name=&quot;名称&quot;</span><br><span class="hljs-attr">spring.application.name</span>=<span class="hljs-string">studentservice-provider</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">#配置扫描的包， 扫描的@DubboService</span><br><span class="hljs-attr">dubbo.scan.base-packages</span>=<span class="hljs-string">com.bjpowernode.service</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">#配置dubbo协议</span><br><span class="hljs-comment">#dubbo.protocol.name=dubbo</span><br><span class="hljs-comment">#dubbo.protocol.port=20881</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">#注册中心</span><br><span class="hljs-attr">dubbo.registry.address</span>=<span class="hljs-string">zookeeper://localhost:2181</span><br></code></pre></td></tr></table></figure><p>4)在启动类的上面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableDubbo</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProviderApplication</span> &#123;<br><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>      SpringApplication.run(ProviderApplication.class, args);<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="7-4消费者"><a href="#7-4消费者" class="headerlink" title="7.4消费者"></a>7.4消费者</h2><p>创建SpringBoot项目</p><p>1） pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><br>   <span class="hljs-comment">&lt;!--加入公共项目的gav--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.bjpowernode<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>022-interface-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>   <span class="hljs-comment">&lt;!--dubbo依赖--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.dubbo<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br>   <span class="hljs-comment">&lt;!--zookeeper依赖--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.dubbo<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>dubbo-dependencies-zookeeper<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>         <span class="hljs-comment">&lt;!-- 排除log4j依赖 --&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-log4j12<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>创建了Controller 或者 Service都可以</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DubboController</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 引用远程服务， 把创建好的代理对象，注入给studentService</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-comment">//@DubboReference(interfaceClass = StudentService.class,version = &quot;1.0&quot;)</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 没有使用interfaceClass，默认的就是 引用类型的 数据类型</span><br><span class="hljs-comment">      */</span><br>    <span class="hljs-meta">@DubboReference(version = &quot;1.0&quot;)</span><br>    <span class="hljs-keyword">private</span> StudentService studentService;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/query&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">queryStudent</span><span class="hljs-params">(Integer id)</span>&#123;<br>        <span class="hljs-type">Student</span> <span class="hljs-variable">student</span>   <span class="hljs-operator">=</span> studentService.queryStudent(id);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;调用远程接口，获取对象：&quot;</span>+student;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3）application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#指定服务名称</span><br><span class="hljs-attr">spring.application.name</span>=<span class="hljs-string">consumer-application</span><br><span class="hljs-comment">#指定注册中心</span><br><span class="hljs-attr">dubbo.registry.address</span>=<span class="hljs-string">zookeeper://localhost:2181</span><br></code></pre></td></tr></table></figure><h2 id="7-5-练习"><a href="#7-5-练习" class="headerlink" title="7.5 练习"></a>7.5 练习</h2><p>使用的技术： SpringBoot ,Dubbo, Redis, MyBatis</p><p>Student表：</p><p><img src="D:\course\25-SpringBoot\笔记\images\image-20210119150418295.png" alt="image-20210119150418295"></p><p>CREATE TABLE <code>student</code> (<br>  <code>id</code> int(11) NOT NULL AUTO_INCREMENT,<br>  <code>name</code> varchar(255) COLLATE utf8_bin DEFAULT NULL,<br>  <code>phone</code> varchar(11) COLLATE utf8_bin DEFAULT NULL,<br>  <code>age</code> int(11) DEFAULT NULL,<br>  PRIMARY KEY (<code>id</code>)<br>) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;6 DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin;</p><ol><li>注册学生</li></ol><p>​     phone必须唯一， 如果已经存在了手机号， 注册失败的。 </p><p>​                 int addStudent(Student student);</p><p>​                返回值：int</p><p>​                 1： 注册成功</p><p>​                 2 ： 手机号已经存在  </p><p>​                                    </p><p>​      name至少两个字符，</p><p>​      age 必须 大于 0 </p><p>2） 查询学生，根据id查询，此学生。 </p><p>​        先到redis查询学生， 如果redis没有此学生，从数据库查询， 把查询到的学生放入到redis。</p><p>​      后面再次查询这个学生应该从redis就能获取到。</p><p>​        Student  queryStudent(Integer id);</p><ol start="3"><li>使用Dubbo框架，    addStudent, queryStudent 是有服务提供者实现的。</li></ol><p>​    消费者可以是一个Controller ， 调用提供者的两个方法。  实现注册和查询。</p><p>4）页面使用html和ajax，jquery。</p><p>​       在html页面中提供 form 注册学生， 提供文本框输入id，进行查询。</p><p>​      注册和查询都使用ajax技术。</p><p>​    html，jquery.js都放到resources&#x2F;static目录中</p><h1 id="第八章-打包"><a href="#第八章-打包" class="headerlink" title="第八章  打包"></a>第八章  打包</h1><h2 id="8-1-打包war"><a href="#8-1-打包war" class="headerlink" title="8.1 打包war"></a>8.1 打包war</h2><p>1.创建了一个jsp应用</p><p>2.修改pom.xml</p><p> 1)指定打包后的文件名称</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>   <span class="hljs-comment">&lt;!--打包后的文件名称--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">finalName</span>&gt;</span>myboot<span class="hljs-tag">&lt;/<span class="hljs-name">finalName</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2)指定jsp编译目录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--resources插件， 把jsp编译到指定的目录--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/webapp<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">targetPath</span>&gt;</span>META-INF/resources<span class="hljs-tag">&lt;/<span class="hljs-name">targetPath</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br><br>   <span class="hljs-comment">&lt;!--使用了mybatis ，而且mapper文件放在src/main/java目录--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br><br>   <span class="hljs-comment">&lt;!--把src/main/resources下面的所有文件，都包含到classes目录--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/resources<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3）执行打包是war</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--打包类型--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4）主启动类继承SpringBootServletInitializer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * SpringBootServletInitializer: 继承这个类， 才能使用独立tomcat服务器</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JspApplication</span>  <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SpringBootServletInitializer</span>  &#123;<br><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>      SpringApplication.run(JspApplication.class, args);<br>   &#125;<br><br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-keyword">protected</span> SpringApplicationBuilder <span class="hljs-title function_">configure</span><span class="hljs-params">(SpringApplicationBuilder builder)</span> &#123;<br>      <span class="hljs-keyword">return</span> builder.sources(JspApplication.class);<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>5）部署war</p><p> 把war放到tomcat等服务器的发布目录中。  tomcat为例， myboot.war放到tomcat&#x2F;webapps目录。</p><h2 id="8-2-打包为jar"><a href="#8-2-打包为jar" class="headerlink" title="8.2 打包为jar"></a>8.2 打包为jar</h2><p>1.创建了一个包含了jsp的项目</p><p>2.修改pom.xml</p><p>​     1) 指定打包后的文件名称</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>   <span class="hljs-comment">&lt;!--打包后的文件名称--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">finalName</span>&gt;</span>myboot<span class="hljs-tag">&lt;/<span class="hljs-name">finalName</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">2) 指定springboot-maven-plugin版本</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-comment">&lt;!--打包jar， 有jsp文件时，必须指定maven-plugin插件的版本是 1.4.2.RELEASE--&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.4.2.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3）最后执行 maven clean package</p><p>​       在target目录中，生成jar 文件， 例子是myboot.jar</p><p>​       执行独立的springboot项目  在cmd中 java  -jar  myboot.jar</p><h1 id="第十章-总结"><a href="#第十章-总结" class="headerlink" title="第十章 总结"></a>第十章 总结</h1><h2 id="10-1-注解"><a href="#10-1-注解" class="headerlink" title="10.1 注解"></a>10.1 注解</h2><p>Spring + SpringMVC + SpringBoot </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java">创建对象的：<br><span class="hljs-meta">@Controller</span>: 放在类的上面，创建控制器对象，注入到容器中<br><span class="hljs-meta">@RestController</span>: 放在类的上面，创建控制器对象，注入到容器中。<br>             作用：复合注解是<span class="hljs-meta">@Controller</span> , <span class="hljs-meta">@ResponseBody</span>, 使用这个注解类的，里面的控制器方法的返回值                   都是数据<br><br><span class="hljs-meta">@Service</span> ： 放在业务层的实现类上面，创建service对象，注入到容器<br><span class="hljs-meta">@Repository</span> : 放在dao层的实现类上面，创建dao对象，放入到容器。 没有使用这个注解，是因为现在使用MyBatis框               架，  dao对象是MyBatis通过代理生成的。 不需要使用<span class="hljs-meta">@Repository</span>、 所以没有使用。<br><span class="hljs-meta">@Component</span>:  放在类的上面，创建此类的对象，放入到容器中。 <br><br>赋值的：<br><span class="hljs-meta">@Value</span> ： 简单类型的赋值， 例如 在属性的上面使用<span class="hljs-meta">@Value(&quot;李四&quot;)</span> <span class="hljs-keyword">private</span> String name<br>          还可以使用<span class="hljs-meta">@Value</span>,获取配置文件者的数据（properties或yml）。 <br>          <span class="hljs-meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span> <span class="hljs-keyword">private</span> Integer port<br><br><span class="hljs-meta">@Autowired</span>: 引用类型赋值自动注入的，支持byName, byType. 默认是byType 。 放在属性的上面，也可以放在构造             方法的上面。 推荐是放在构造方法的上面<br><span class="hljs-meta">@Qualifer</span>:  给引用类型赋值，使用byName方式。   <br>            <span class="hljs-meta">@Autowird</span>, <span class="hljs-meta">@Qualifer</span>都是Spring框架提供的。<br><br><span class="hljs-meta">@Resource</span> ： 来自jdk中的定义， javax.annotation。 实现引用类型的自动注入， 支持byName, byType.<br>             默认是byName, 如果byName失败， 再使用byType注入。 在属性上面使用<br><br><br>其他：<br><span class="hljs-meta">@Configuration</span> ： 放在类的上面，表示这是个配置类，相当于xml配置文件<br><br><span class="hljs-meta">@Bean</span>：放在方法的上面， 把方法的返回值对象，注入到spring容器中。<br><br><span class="hljs-meta">@ImportResource</span> ： 加载其他的xml配置文件， 把文件中的对象注入到spring容器中<br><br><span class="hljs-meta">@PropertySource</span> ： 读取其他的properties属性配置文件<br><br><span class="hljs-meta">@ComponentScan</span>： 扫描器 ，指定包名，扫描注解的<br><br><span class="hljs-meta">@ResponseBody</span>: 放在方法的上面，表示方法的返回值是数据， 不是视图<br><span class="hljs-meta">@RequestBody</span> : 把请求体中的数据，读取出来， 转为java对象使用。<br><br><span class="hljs-meta">@ControllerAdvice</span>:  控制器增强， 放在类的上面， 表示此类提供了方法，可以对controller增强功能。<br><br><span class="hljs-meta">@ExceptionHandler</span> : 处理异常的，放在方法的上面<br><br><span class="hljs-meta">@Transcational</span> :  处理事务的， 放在service实现类的<span class="hljs-keyword">public</span>方法上面， 表示此方法有事务<br><br><br>SpringBoot中使用的注解<br>    <br><span class="hljs-meta">@SpringBootApplication</span> ： 放在启动类上面， 包含了<span class="hljs-meta">@SpringBootConfiguration</span><br>                          <span class="hljs-meta">@EnableAutoConfiguration</span>， <span class="hljs-meta">@ComponentScan</span><br><br><br>    <br>MyBatis相关的注解<br><br><span class="hljs-meta">@Mapper</span> ： 放在类的上面 ， 让MyBatis找到接口， 创建他的代理对象    <br><span class="hljs-meta">@MapperScan</span> :放在主类的上面 ， 指定扫描的包， 把这个包中的所有接口都创建代理对象。 对象注入到容器中<br><span class="hljs-meta">@Param</span> ： 放在dao接口的方法的形参前面， 作为命名参数使用的。<br>    <br>Dubbo注解<br><span class="hljs-meta">@DubboService</span>: 在提供者端使用的，暴露服务的， 放在接口的实现类上面<br><span class="hljs-meta">@DubboReference</span>:  在消费者端使用的， 引用远程服务， 放在属性上面使用。<br><span class="hljs-meta">@EnableDubbo</span> : 放在主类上面， 表示当前引用启用Dubbo功能。<br>    <br>    <br>    <br>    <br>    <br><br><br>    <br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>自我介绍</title>
    <link href="/2023/12/22/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/22/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>面试官，您好！非常荣幸能参加这次面试，我是一名计算机专业大四学生，目前就读于武昌工学院。在校学习的四年里，我深入学习了计算机科学的核心概念和原理，并且掌握了编程和解决问题的能力。</p><p>我还学习了数据结构、操作系统、计算机网络、计算机组成原理等核心课程。这些课程为我提供了坚实的计算机基础。除了课堂学习，我也会在网络上自学，掌握了项目的实践经验。在项目方面，我开发了一个外卖管理系统，主要功能有  </p><p>1.登录、退出模块： 用户输入账号密码后点击登录发起请求，通过前端正则表达式验证后，后端查询数据库，登录成功后生成jwt令牌。生成令牌后，用户的每次请求的请求头中都会携带token令牌。设置jwt令牌校验的拦截器，校验令牌。</p><p>2.员工管理：集成mybatis编写SQL语句对数据库进行操作，并使用pagehelper插件进行分页，pagehelper插件首先是在 Mybatis 里面配置了分页拦截器，这个拦截器会在 SQL 执行之前添加分页信息，分页信息是通过 Page 对象传递到当前线程中的，之后会自动为 SQL 加上<code>limit</code></p><p>Swagger： 可以自动的帮助开发人员生成接口文档，并对接口进行测试。</p><p>利用阿里云oss服务保存图片，并将图片回显给前端。</p><p>利用Aop编程思想进行公共字段填充，首先创建自定义注解类标识需要进行填充的方法，再创建定义切面类，在切面类添加前置通知，通过切点表达式</p><p>项目完成后通过push到远程仓库</p><p>尊敬的面试官，您好！我是一名即将毕业的计算机专业大四学生，就读于武昌工学院。在过去的四年中，我全面学习了计算机科学的核心概念和原理，并通过实践培养了编程和问题解决能力。</p><p>我的课程涵盖了数据结构、操作系统、计算机网络、计算机组成原理等核心课程，为我打下了坚实的计算机基础。除了课堂学习外，我还积极利用网络资源自学，并将学到的知识运用于项目实践中。</p><p>在我的项目经历中，我开发了一个外卖管理系统，其中主要功能包括：</p><ol><li><strong>登录模块：</strong> 实现了用户登录验证机制，通过前后端的验证和后端数据库查询，成功登录后生成JWT令牌。利用JWT令牌在每次请求中进行校验，确保系统安全性。</li><li><strong>员工管理：</strong> 使用MyBatis完成对数据库的操作，并结合pagehelper插件实现分页查询。通过MyBatis的Mapper接口编写SQL语句，并利用pagehelper插件自动添加分页信息。</li><li><strong>Swagger文档化：</strong> 使用Swagger自动生成API接口文档，方便团队协作和接口测试，提高了项目的可维护性和可读性。</li><li><strong>阿里云OSS服务和AOP编程思想：</strong> 借助阿里云OSS服务保存图片，并利用AOP编程思想对公共字段进行填充，提高了系统的效率和可维护性。</li><li><strong>版本管理：</strong> 项目开发完成后，我将其推送到远程仓库（例如GitHub），使用Git进行版本控制，有效地管理和追踪项目的变更。</li></ol><p>这些项目经历不仅让我在技术上有了很大的成长，也锻炼了我的团队协作和解决问题的能力。我对未来能够在实际工作中将所学知识和经验更好地应用有着坚定的信心。</p><p>非常感谢您抽出时间考虑我的申请。期待有机会在您的团队中贡献我的技能与热情。谢谢！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>IIS服务部署流程</title>
    <link href="/2023/12/22/IIS%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/"/>
    <url>/2023/12/22/IIS%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="IIS服务部署流程"><a href="#IIS服务部署流程" class="headerlink" title="IIS服务部署流程"></a>IIS服务部署流程</h1><p><strong>1安装iis在服务器管理器点击添加角色和功能</strong></p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214140943439.png" alt="image-20231214140943439" style="zoom:80%;" /><p>2.点击下一步勾选Web服务器，【asp，HTTP，安全等全部安装】（先安装iis、后dent-&gt;asp解析问题）</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214141458250.png" alt="image-20231214141458250"></p><p>3.安装.net framework，安装成功后进入文件资源管理器 C:\Windows\Microsoft.NET\Framework64</p><p>分别进入C:\Windows\Microsoft.NET\Framework64\v4.0.30319</p><p>​              C:\Windows\Microsoft.NET\Framework64\v2.0.50727</p><p>在文件夹地址输入cmd，打开cmd窗口 输入aspnet_regiis.exe -i 注册.net</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214142214684.png" alt="image-20231214142214684"></p><p>4.右键点击添加网站：</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214142733715.png" alt="image-20231214142733715"></p><p>5.设置网站IP为*，端口为80，修改默认文档为你的index网页首页（注意重启iis和web）</p><p>6.在添加的web网站中 检查ISAPI筛选器中是否添加成功.net、处理程序映射、请求筛选</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214143025061.png" alt="image-20231214143025061"></p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214143310179.png" alt="image-20231214143310179"></p><p>7.设置阿里云实例安全组的80端口开放（ping测试域名解析ip是否成功，添加安全组入网http80端口）</p><p>8.应用程序池设置：<strong>启用32位应用程序选择True</strong>（特别注意！！！！！！可能会因为32位和64位程序不兼容导致网页出错）</p><p>进程模型中的标识根据你的程序设置选择 ，一般是默认的</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214144505186.png" alt="image-20231214144505186"></p><p>9.打开高级安全Windows防火墙 新建规则点击端口，下一步选择TCP，特定端口添加80端口</p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214145329193.png" alt="image-20231214145329193" style="zoom:67%;" /><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214145528002.png" alt="image-20231214145528002" style="zoom: 67%;" /><h1 id="发布FTP站点"><a href="#发布FTP站点" class="headerlink" title="发布FTP站点"></a>发布FTP站点</h1><p>1.打开计算机管理，点击本地用户和组</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214150053838.png" alt="image-20231214150053838"></p><p>右键添加新用户输入用户名和密码，选择密码永不过期，创建</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214150146125.png" alt="image-20231214150146125"></p><p>点击组，右键点击新建组，点击添加，高级，立即查找，选择新建的用户，确定，创建</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214150254445.png" alt="image-20231214150254445"></p><p>返回IIS管理器，右键网站，点击添加FTP站点</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214151059250.png" alt="image-20231214151059250"></p><p>输入站点名称，物理路径</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214145917293.png" alt="image-20231214145917293"></p><p>选择默认的21端口、无SSL，下一步</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214145937747.png" alt="image-20231214145937747"></p><p>勾选匿名和基本，选择指定用户，输入创建的用户名，完成</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214150017302.png" alt="image-20231214150017302"></p><p>右键创建的FTP站点，编辑权限，将创建的用户添加进去</p><p><img src="C:\Users\496857987\AppData\Roaming\Typora\typora-user-images\image-20231214150355377.png" alt="image-20231214150355377"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>哈哈哈</title>
    <link href="/2023/11/24/%E5%93%88%E5%93%88%E5%93%88/"/>
    <url>/2023/11/24/%E5%93%88%E5%93%88%E5%93%88/</url>
    
    <content type="html"><![CDATA[<h1 id="Typora-Markdown-Grammar"><a href="#Typora-Markdown-Grammar" class="headerlink" title="Typora Markdown Grammar"></a>Typora Markdown Grammar</h1><h3 id="title-标题样式"><a href="#title-标题样式" class="headerlink" title="title 标题样式"></a>title 标题样式</h3><p>​<strong>一级标题</strong> - ctrl + 1<br>​<strong>二级标题</strong> - ctrl + 2<br>​<strong>三级标题</strong> - ctrl + 3<br>​<strong>四级标题</strong> - ctrl + 4<br>​<strong>五级标题</strong> - ctrl + 5<br>​<strong>六级标题</strong> - ctrl + 6 </p><h3 id="font-文本样式"><a href="#font-文本样式" class="headerlink" title="font 文本样式"></a>font 文本样式</h3><p>​<strong>加粗</strong> - Ctrl + B，前后加两个 *<br>​<strong>斜体</strong> - Ctrl + I，前后加一个 *<br>​<strong>下划线</strong> - Ctrl + U，或者使用 &lt;u&gt; &lt;&#x2F;u&gt;<br>​<strong>高亮</strong> - 前后加两个 &#x3D;<br>​<strong>删除线</strong> - 前后加两个 ~<br>​<strong>上标</strong> - 使用 ^ ^<br>​<strong>下标</strong> - 使用 ~ ~<br>​<strong>注释</strong> - 使用 &lt;!– –&gt;</p><h3 id="blockquote-块"><a href="#blockquote-块" class="headerlink" title="blockquote 块"></a>blockquote 块</h3><p>​<strong>插入表格</strong> - Ctrl + T<br>​<strong>插入代码块</strong> - Ctrl + Shift + K 或 ```<br>​<strong>插入公式块</strong> - Ctrl + Shift + M<br>​<strong>引用</strong> - Ctrl + Shift + Q 或 &gt; + Space<br>​<strong>有序列表</strong> - Ctrl + Shift + [ 或 1. + Enter<br>​<strong>无序列表</strong> - Ctrl + Shift + ] 或 - + Space<br>​<strong>数学表达式</strong> - $ $</p><h3 id="link-链接"><a href="#link-链接" class="headerlink" title="link 链接"></a>link 链接</h3><p>​<strong>超链接</strong> - 使用 [ ]( )<br>​<strong>图像链接</strong> - Ctrl + Shift + I<br>​<strong>Emoji 表情</strong> - : :</p><h3 id="break-换行"><a href="#break-换行" class="headerlink" title="break 换行"></a>break 换行</h3><p>​<strong>软换行</strong> - Shift + Enter<br>​<strong>硬换行</strong> - Space Space + Shift + Enter<br>​<strong>换段</strong> - Enter 或两次软换行</p><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><table><thead><tr><th>算式</th><th>Markdown</th></tr></thead><tbody><tr><td>1 &#x2F; 2</td><td>\frac{1}{2}</td></tr><tr><td>⋯</td><td>\cdots</td></tr><tr><td>根</td><td>\sqrt{2}</td></tr><tr><td>矢量</td><td>\vec{a}</td></tr><tr><td>∫ x dx</td><td>\int{x}dx</td></tr><tr><td>∫<del>1</del>^2^ x dx</td><td>\int_{1}^{2}{x}dx</td></tr><tr><td>lim ⁡ a + b</td><td>lima+b</td></tr><tr><td>lim ⁡ n → + ∞</td><td>\lim_{n\rightarrow+\infty}</td></tr><tr><td>∑ a</td><td>\sum{a}</td></tr><tr><td>∑ n &#x3D; 1 100 a n</td><td>\sum_{n&#x3D;1}^{100}{a_n}</td></tr><tr><td>∏ x</td><td>\prod{x}</td></tr><tr><td>∏ n &#x3D; 1 99 x n</td><td>\prod_{n&#x3D;1}^{99}{x_n}</td></tr><tr><td>sin</td><td>\sin</td></tr><tr><td>ln2  log<del>2</del> 8 lg 10</td><td>\ln2 \log_28 \lg10</td></tr><tr><td>±</td><td>\pm</td></tr><tr><td>\times</td><td>\times</td></tr><tr><td>⋅</td><td>\cdot</td></tr><tr><td>÷</td><td>\div</td></tr><tr><td>\neq</td><td>\neq</td></tr><tr><td>≡ ≤ ≥</td><td>\equiv \leq \geq</td></tr><tr><td>∀</td><td>\forall</td></tr><tr><td>∞</td><td>\infty</td></tr><tr><td>∅</td><td>\emptyset</td></tr><tr><td>∃</td><td>\exists</td></tr><tr><td>∇</td><td>\nabla</td></tr><tr><td>⊥ ∠</td><td>\bot \angle</td></tr><tr><td>∵ ∴</td><td>\because \therefore</td></tr><tr><td>空格</td><td>\quad</td></tr></tbody></table><p>花括号<br>$$<br>111\begin{cases}1 \1 \1 \end{cases}<br>$$<br>矩阵<br>$$<br>a &#x3D; \left[<br>    \matrix{<br>        \alpha_1 &amp; text1\<br>        \alpha_2 &amp; text2\<br>        \alpha_3 &amp; text3\<br>    }<br>\right]<br>$$<br>希腊字母</p><p>大写Markdown小写Markdown<br>A AAAα \alphaα\alpha<br>B BBBβ \betaβ\beta<br>Γ \GammaΓ\Gammaγ \gammaγ\gamma<br>Δ \DeltaΔ\Deltaδ \deltaδ\delta<br>E EEEϵ \epsilonϵ\epsilon<br>ε \varepsilonε\varepsilon<br>Z ZZZζ \zetaζ\zeta<br>H HHHη \etaη\eta<br>Θ \ThetaΘ\Thetaθ \thetaθ\theta<br>I IIIι \iotaι\iota<br>K KKKκ \kappaκ\kappa<br>Λ \LambdaΛ\Lambdaλ \lambdaλ\lambda<br>M MMMμ \muμ\mu<br>N NNNν \nuν\nu<br>Ξ \XiΞ\Xiξ \xiξ\xi<br>O OOOο \omicronο\omicron<br>Π \PiΠ\Piπ \piπ\pi<br>P PPPρ \rhoρ\rho<br>Σ \SigmaΣ\Sigmaσ \sigmaσ\sigma<br>T TTTτ \tauτ\tau<br>Υ \UpsilonΥ\Upsilonυ \upsilonυ\upsilon<br>Φ \PhiΦ\Phiϕ \phiϕ\phi<br>φ \varphiφ\varphi<br>X XXXχ \chiχ\chi<br>Ψ \PsiΨ\Psiψ \psiψ\psi<br>Ω \OmegaΩ\Omegaω \omegaω\omega</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/11/24/hello-world/"/>
    <url>/2023/11/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
